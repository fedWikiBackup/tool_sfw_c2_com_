{
  "title": "Text Template Transformation Toolkit",
  "story": [
    {
      "type": "html",
      "text": "The [[Text Template Transformation Toolkit]], or T4, used to be a part of the [[Domain Specific Language]] add-on for [[Visual Studio]], but it has been mainstreamed.",
      "id": "fe8ed902fa337f59a355824e3c95ba03"
    },
    {
      "type": "html",
      "text": "\nIt was part of Visual Studio 2008 (even without downloading any add-ons), but it was hidden; to create a text template you would add a file to your project with the <b>.tt</b> extension.",
      "id": "236ef72e2a5f0155490a94752c3bd690"
    },
    {
      "type": "html",
      "text": "\nIn Visual Studio 2010, you can create two different kinds of text templates from the File | New menu.",
      "id": "585a488b5b730c3ee5510585cd8f67a1"
    },
    {
      "type": "html",
      "text": "\nA text template is sort of like PHP, except that the code parts are written in VB or C#. You can use the code to make portions of the text conditional or repeating. You can also insert the results of computation into the text.",
      "id": "da2987ebd1331e02d0f59607d234c700"
    },
    {
      "type": "html",
      "text": "\nOne type of text template inserts the generated file directly into your project. So you can, for example, generate C# code, which can then be compiled as part of your project along with everything else. However, text templates can generate any (text based) type of file; for example, they can generate plain text, or comma-delimited files, or HTML, or XML.",
      "id": "05ace2c531b4fcaa333f96d189076512"
    },
    {
      "type": "html",
      "text": "\nThe other type of text template generates a class which will then generate the output at runtime. So if you have a program that generates HTML output, you can use a text template to describe the output, and then use the generated class to actually generate it, based on the template.",
      "id": "d1f397cc137f7d565d51409f25e5f3e6"
    },
    {
      "type": "html",
      "text": "\nThe code in a text template can also read from files, databases, or other sources.",
      "id": "9d4d332f7035e9941bae08f6fd87a36b"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "a7d0984ea766f2744a9df9fc46392e08"
    },
    {
      "type": "html",
      "text": "The [[Text Template Transformation Toolkit]] and [[Reflection Emit]] are both used for [[Code Generation]]. T4 is used at compile-time whereas [[Reflection Emit]] can be used at runtime.",
      "id": "0990030c9bdc60e53053f18ccf80afce"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?TextTemplateTransformationToolkit c2.com]",
      "id": "8a467c04bdf438c9d61bf62e25cb1ff0"
    }
  ],
  "journal": [
    {
      "date": 1322433081000,
      "id": "4bebe0a3fa219bc6df0db1813ba65c3e",
      "type": "create",
      "item": {
        "title": "Text Template Transformation Toolkit",
        "story": [
          {
            "type": "html",
            "text": "The [[Text Template Transformation Toolkit]], or T4, used to be a part of the [[Domain Specific Language]] add-on for [[Visual Studio]], but it has been mainstreamed.",
            "id": "fe8ed902fa337f59a355824e3c95ba03"
          },
          {
            "type": "html",
            "text": "\nIt was part of Visual Studio 2008 (even without downloading any add-ons), but it was hidden; to create a text template you would add a file to your project with the <b>.tt</b> extension.",
            "id": "236ef72e2a5f0155490a94752c3bd690"
          },
          {
            "type": "html",
            "text": "\nIn Visual Studio 2010, you can create two different kinds of text templates from the File | New menu.",
            "id": "585a488b5b730c3ee5510585cd8f67a1"
          },
          {
            "type": "html",
            "text": "\nA text template is sort of like PHP, except that the code parts are written in VB or C#. You can use the code to make portions of the text conditional or repeating. You can also insert the results of computation into the text.",
            "id": "da2987ebd1331e02d0f59607d234c700"
          },
          {
            "type": "html",
            "text": "\nOne type of text template inserts the generated file directly into your project. So you can, for example, generate C# code, which can then be compiled as part of your project along with everything else. However, text templates can generate any (text based) type of file; for example, they can generate plain text, or comma-delimited files, or HTML, or XML.",
            "id": "05ace2c531b4fcaa333f96d189076512"
          },
          {
            "type": "html",
            "text": "\nThe other type of text template generates a class which will then generate the output at runtime. So if you have a program that generates HTML output, you can use a text template to describe the output, and then use the generated class to actually generate it, based on the template.",
            "id": "d1f397cc137f7d565d51409f25e5f3e6"
          },
          {
            "type": "html",
            "text": "\nThe code in a text template can also read from files, databases, or other sources.",
            "id": "9d4d332f7035e9941bae08f6fd87a36b"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "a7d0984ea766f2744a9df9fc46392e08"
          },
          {
            "type": "html",
            "text": "The [[Text Template Transformation Toolkit]] and [[Reflection Emit]] are both used for [[Code Generation]]. T4 is used at compile-time whereas [[Reflection Emit]] can be used at runtime.",
            "id": "0990030c9bdc60e53053f18ccf80afce"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?TextTemplateTransformationToolkit c2.com]",
            "id": "8a467c04bdf438c9d61bf62e25cb1ff0"
          }
        ]
      }
    }
  ]
}