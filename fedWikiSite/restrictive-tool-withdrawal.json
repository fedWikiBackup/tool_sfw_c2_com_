{
  "title": "Restrictive Tool Withdrawal",
  "story": [
    {
      "type": "html",
      "text": "An Ode to having to toss favorite tools",
      "id": "ae9640e7917052e8d15e892871febe6c"
    },
    {
      "type": "html",
      "text": "<i>Note - please [[Wiki Link]] anything you can here!</i>",
      "id": "a680937f0e0d7fc6f3e6efd7bb7ee627"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "ddd09f13aa688ae71ced5ca54d55a7c2"
    },
    {
      "type": "html",
      "text": "(Ramblings from another discussion board that I plan to clean up later)",
      "id": "5b9d37529ea9cbe74fb75d4bbcc0e5de"
    },
    {
      "type": "html",
      "text": "\n[[Cee Language]] is hardly the pinnacle of [[Procedural Languages]] or tools in general. As a [[Hard Language]], it is designed for *hardware* performance and providing predictable [[Run Time]] resource constraints, NOT [[Software Engineering]] convenience. It is the \"new assembler\", with some of the same headaches that [[Assembly Language]] had.",
      "id": "24192ce048bfcf65d9d1af45a8e0f16c"
    },
    {
      "type": "html",
      "text": "\nIt's like comparing a Honda Civic to a Toyota RAV for off-road use. That the RAV beat the Civic for off-roading is not surprising.",
      "id": "5351816ebfca36c0a564cce45a068a56"
    },
    {
      "type": "html",
      "text": "\nIf you wrote your [[Payroll Example]] in [[Cee Language]] without using the features of the [[Data Base]] much, even I would prefer your [[Cee Plus Plus]] or [[Cee Sharp]] version over it.",
      "id": "9a97b3883db333a2c538352847360106"
    },
    {
      "type": "html",
      "text": "\nThe lesson is that if you want software-engineering-friendly tools, then you have to get software-engineering-friendly tools.",
      "id": "f05dfec7de67baa11f54b590e0797710"
    },
    {
      "type": "html",
      "text": "\nYou seem to be focusing too much on YOUR past when you do mental comparing. It's interesting to note that I grew up on [[Ex Base]] (dBASE clones). Although the language was a bit clunky, it taught me the power of and productivity of [[Dynamic Language]]s combined with nimble-and-ready [[Data Base]] engines. I ran circles around the [[Cobol Language]], [[Cee Language]], and [[Pascal Language]] guys.",
      "id": "4d3ac208afaa568ab605fe44d5f6b4c9"
    },
    {
      "type": "html",
      "text": "\n[[Object Oriented Programming]] was 2 steps backward, with its stiff, hardwired taxonomies and difficult-to-navigate-sift-and-study navigational [[Object Pointer]] pasta. Shifting most of the [[Business Logic]] to tables just plain made it easier to manage. Code was more or less a low-IQ foot soldier that simply carried out the features requested by the tables. The tables were the dinner menus and order slips, and the program code was the back-room cooks. Nimble tables are addicting and now I had to suffer withdrawal symptoms as the fad pendulum [[[Technological Pendulum]]] shifted back to ugly, tangled, static, code-centric paradigms. (I know, [[Smalltalk Language]] and [[Python Language]] are more dynamic, but they are still essentially navigational in structure. [[Dr Codd]] was smart to \"fix\" navigational. He is the genius, not me. I merely stumbled into his genius.)",
      "id": "313ec9ca951b7fff521b7b6540e9532b"
    },
    {
      "type": "html",
      "text": "\nI hear that [[Lisp Language]] fans suffer similar withdrawal symptoms when forced to use more restricting languages. Once you've been with Tabitha, Ol' Bertha just doesn't cut it.",
      "id": "32cc6465248701f36101bf26ecf770f5"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "ddd09f13aa688ae71ced5ca54d55a7c2"
    },
    {
      "type": "html",
      "text": "See also [[Favorite Tools And Productivity]], [[Navigational Vs Relational]]",
      "id": "337beb0b216dabaeaab81ee7a62d769d"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "ddd09f13aa688ae71ced5ca54d55a7c2"
    },
    {
      "type": "html",
      "text": "[[Category Old Software]]",
      "id": "2afd94d0af9b2be98e108cc9117b9551"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?RestrictiveToolWithdrawal c2.com]",
      "id": "3ccd79ffb1c829fba05f38c6a08b7c58"
    }
  ],
  "journal": [
    {
      "date": 1203793675000,
      "id": "bff7449dc54ed0191a1dc1a7db6784c6",
      "type": "create",
      "item": {
        "title": "Restrictive Tool Withdrawal",
        "story": [
          {
            "type": "html",
            "text": "An Ode to having to toss favorite tools",
            "id": "ae9640e7917052e8d15e892871febe6c"
          },
          {
            "type": "html",
            "text": "<i>Note - please [[Wiki Link]] anything you can here!</i>",
            "id": "a680937f0e0d7fc6f3e6efd7bb7ee627"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "ddd09f13aa688ae71ced5ca54d55a7c2"
          },
          {
            "type": "html",
            "text": "(Ramblings from another discussion board that I plan to clean up later)",
            "id": "5b9d37529ea9cbe74fb75d4bbcc0e5de"
          },
          {
            "type": "html",
            "text": "\n[[Cee Language]] is hardly the pinnacle of [[Procedural Languages]] or tools in general. As a [[Hard Language]], it is designed for *hardware* performance and providing predictable [[Run Time]] resource constraints, NOT [[Software Engineering]] convenience. It is the \"new assembler\", with some of the same headaches that [[Assembly Language]] had.",
            "id": "24192ce048bfcf65d9d1af45a8e0f16c"
          },
          {
            "type": "html",
            "text": "\nIt's like comparing a Honda Civic to a Toyota RAV for off-road use. That the RAV beat the Civic for off-roading is not surprising.",
            "id": "5351816ebfca36c0a564cce45a068a56"
          },
          {
            "type": "html",
            "text": "\nIf you wrote your [[Payroll Example]] in [[Cee Language]] without using the features of the [[Data Base]] much, even I would prefer your [[Cee Plus Plus]] or [[Cee Sharp]] version over it.",
            "id": "9a97b3883db333a2c538352847360106"
          },
          {
            "type": "html",
            "text": "\nThe lesson is that if you want software-engineering-friendly tools, then you have to get software-engineering-friendly tools.",
            "id": "f05dfec7de67baa11f54b590e0797710"
          },
          {
            "type": "html",
            "text": "\nYou seem to be focusing too much on YOUR past when you do mental comparing. It's interesting to note that I grew up on [[Ex Base]] (dBASE clones). Although the language was a bit clunky, it taught me the power of and productivity of [[Dynamic Language]]s combined with nimble-and-ready [[Data Base]] engines. I ran circles around the [[Cobol Language]], [[Cee Language]], and [[Pascal Language]] guys.",
            "id": "4d3ac208afaa568ab605fe44d5f6b4c9"
          },
          {
            "type": "html",
            "text": "\n[[Object Oriented Programming]] was 2 steps backward, with its stiff, hardwired taxonomies and difficult-to-navigate-sift-and-study navigational [[Object Pointer]] pasta. Shifting most of the [[Business Logic]] to tables just plain made it easier to manage. Code was more or less a low-IQ foot soldier that simply carried out the features requested by the tables. The tables were the dinner menus and order slips, and the program code was the back-room cooks. Nimble tables are addicting and now I had to suffer withdrawal symptoms as the fad pendulum [[[Technological Pendulum]]] shifted back to ugly, tangled, static, code-centric paradigms. (I know, [[Smalltalk Language]] and [[Python Language]] are more dynamic, but they are still essentially navigational in structure. [[Dr Codd]] was smart to \"fix\" navigational. He is the genius, not me. I merely stumbled into his genius.)",
            "id": "313ec9ca951b7fff521b7b6540e9532b"
          },
          {
            "type": "html",
            "text": "\nI hear that [[Lisp Language]] fans suffer similar withdrawal symptoms when forced to use more restricting languages. Once you've been with Tabitha, Ol' Bertha just doesn't cut it.",
            "id": "32cc6465248701f36101bf26ecf770f5"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "ddd09f13aa688ae71ced5ca54d55a7c2"
          },
          {
            "type": "html",
            "text": "See also [[Favorite Tools And Productivity]], [[Navigational Vs Relational]]",
            "id": "337beb0b216dabaeaab81ee7a62d769d"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "ddd09f13aa688ae71ced5ca54d55a7c2"
          },
          {
            "type": "html",
            "text": "[[Category Old Software]]",
            "id": "2afd94d0af9b2be98e108cc9117b9551"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?RestrictiveToolWithdrawal c2.com]",
            "id": "3ccd79ffb1c829fba05f38c6a08b7c58"
          }
        ]
      }
    }
  ]
}